/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf --transform 
Files: scene.gltf [504.42KB] > E:\DS\WebD\React\reactthreefibre\reactthree5\public\models\smoll\scene-transformed.glb [32.57MB] (-6357%)
Author: Seafoam (https://sketchfab.com/seafoam)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/smoller-gura-gawr-gura-holomyth-3329b7c37a694fd19295e7f68d3471f8
Title: Smol(ler) Gura - Gawr Gura, HoloMyth
*/

import React, { useEffect } from 'react'
import { useFrame, useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import useGame from './store/useGame'
export default function Smoll(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('models/smoll/scene-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  
const phase=useGame(state=>state.phase)
  useEffect(()=>{
     
    actions.idle.play()
     if(phase=='playing'){
      
      window.setTimeout(()=>{
        actions.ParadeWalk.play()
        actions.ParadeWalk.crossFadeFrom(actions.idle,0.5)
     },1000)
     }
   

  },[phase])
 
  useFrame((state,delta)=>{
    
      group.current.rotation.y+=delta*0.005*Math.PI
  })


  return (
    <group ref={group} {...props} dispose={null} >
      <group name="Sketchfab_Scene">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh castShadow name="Object_54" geometry={nodes.Object_54.geometry} material={materials.SmolGura} skeleton={nodes.Object_54.skeleton} morphTargetDictionary={nodes.Object_54.morphTargetDictionary} morphTargetInfluences={nodes.Object_54.morphTargetInfluences} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh castShadow name="Object_55" geometry={nodes.Object_55.geometry} material={materials.SmolguraOutline} skeleton={nodes.Object_55.skeleton} morphTargetDictionary={nodes.Object_55.morphTargetDictionary} morphTargetInfluences={nodes.Object_55.morphTargetInfluences} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh castShadow name="Object_56" geometry={nodes.Object_56.geometry} material={materials.SmolguraHead} skeleton={nodes.Object_56.skeleton} morphTargetDictionary={nodes.Object_56.morphTargetDictionary} morphTargetInfluences={nodes.Object_56.morphTargetInfluences} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh castShadow name="Object_57" geometry={nodes.Object_57.geometry} material={materials.SmolguraEye} skeleton={nodes.Object_57.skeleton} morphTargetDictionary={nodes.Object_57.morphTargetDictionary} morphTargetInfluences={nodes.Object_57.morphTargetInfluences} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('models/smoll/scene-transformed.glb')
